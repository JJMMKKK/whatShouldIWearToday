1. `String url = "https://api.openai.com/v1/chat/completions";`: 요청을 보낼 엔드포인트 URL을 지정합니다.
- 엔드포인트 url: 요청을 보낼 url
- 같은 url이라도 HTTP 메소드에 따라 다른 행위를 요청할 수 있게끔 구별해주는 항목
- 정보를 주고 받는 길

2. `HttpHeaders headers = new HttpHeaders();`: HTTP 요청 헤더를 생성합니다.
- HTTP 요청 헤더:   클라이언트가 서버에 요청을 보낼 때 함께 보내는 정보
- 요청의 내용이나 요청한 데이터의 형식을 서버에게 알려주거나, 요청을 보내는 클라이언트가 누구인지 인증하는 역할
- 해당 정보들은 서버에 도착하면 서버가 요청을 올바르게 처리할 수 있도록 도움

3. `headers.setBearerAuth(secretKey);`: Bearer 토큰을 사용하여 요청에 인증 정보를 추가합니다.
- 헤더에 Bearer 토큰을 사용하여 클라이언트가 해당 서비스에 인증된 사용자임을 증명하는데 사용

4. `headers.add("Content-Type", "application/json");`: 요청 헤더에 JSON 형식의 콘텐츠 타입을 추가합니다.
- 서버에게 클라이언트가 JSON 형식으로 데이터를 보내기 위함

   Map<String, Object> map = new HashMap<>();
        map.put("model", questionDto.getModel());
        map.put("temperature", temperature);
        map.put("max_tokens", max_tokens);

5. `map.put("message", Collections.singletonList(Map.of("role", "user", "content", questionDto.getPrompt())));`: 요청 본문에 사용자의 메시지를 추가합니다.
    - Key - value : role = user // content = questionDto.getPrompt()
    - Collections: 데이터를 저장 / 조작 / 검색할 때 사용되는 클래스와 인터페이스를 제공하는 유틸리티 클래스
                    - List / Set / Map 등과 같은 데이터 구조를 다루는 메서드가 포함
                    ex) 리스트에 요소를 추가하거나 제거하는 메서드 / 세트에서 중복된 요소를 제거하는 메서드 / 맵에서 특정 키에 해당하는 값을 가져오는 메서드 등
    - singletonList:    리스트 안에 하나의 요소만 들어있는 리스트를 만들 수 있으며, 만든 뒤에 안의 요소를 변경할 수 없음
                        - 메서드가 리스트 형태를 원할 경우에 사용

6. `String requestJson = objectMapper.writeValueAsString(map);`: 맵을 JSON 문자열로 변환합니다.
    - `objectMapper`:   - 자바 객체를 JSON 형식의 문자열로 변환하거나 JSON 문자열을 JAVA 객체로 변환할 때 사용(Jackson 라이브러리에서 제공)
                        - JSON 직렬화를 위해 사용됨(JSON 형식의 문자열로 변환)
    - writeValueAsString(): java 객체를 JSON 형식의 문자열로 변환하는 역할
    - readValue():          JSON 형식의 문자열을 java 객체로 역직렬화하는 역할
                  ex)   String jsonString = "{\"name\": \"John\", \"age\": 30}";
                        Person person = objectMapper.readValue(jsonString, Person.class);

7. `HttpEntity<String> request = new HttpEntity<>(requestJson, headers);`: JSON 형식의 요청 본문과 헤더를 포함하는 HTTP 요청 엔터티를 생성합니다.
    - HttpEntity:       - HTTP 요청이나 응답의 본문을 포함하는 엔터티
    - String:           - 서버로 String 타입(JSON 형식의 문자열)로 보내겠다는 뜻
    - requestJson:      - String 타입으로 보낼 본문
    - headers:          - 요청을 보낼 때 함께 전송되는 추가 정보를 포함한 헤더

8. ResponseEntity<받을 타입> response = restTemplate.exchange(보낼 주소, HttpMethod.요청방법, HttpEntity객체, 받을 타입.class);
    - ResponseEntity:   - HTTP 응답을 나타내는 객체(응답 상태 코드, 헤더, 본문 등의 정보가 포함)
    - String:           - String 타입으로 받겠다는 뜻(대부분 JSON 형식의 문자열)
    - restTemplate:     - HTTP 통신을 위한 도구
                        - RESTful API 웹 서비스와의 상호작용을 쉽게 외부 도메인에서 데이터를 가져오거나 전송할 때 사용되는 스프링 프레임워크의 클래스
    - exchange():       - RestTemplate 클래스의 메서드로 헤더를 생성하고 모든 HTTP 요청 방법을 허용
                        - ResponseEntity로 반환
                        - (보낼 주소, HttpMethod.요청 방법, HttpEntity객체, 받을 타입.class)
    - postForEntity():  - post 타입의 exchange();

9. JsonNode node = objectMapper.readTree(response.getBody());
   String content = node.path("choices").get(0).path("message").path("content").asText();
   - JsonNode:          - JSON 데이터를 트리 구조로 표현하는 노드(JSON 데이터 구조를 메모리에서 나타내는 자료 구조)(노드: 그래프의 구성 요소 중 하나로, 데이터를 담고 있고 다른 노드들과의 관계를 표현함)
                        - JSON 데이터의 구조를 표현하고, 데이터에 접근하고 조작할 때 사용
                        - path("choices"):  쉼표로 구분된 JSON 데이터 중 key가 choice인 value 선택
                        - get(0):           value가 배열 형태이기 때문에 배열 중 첫번째 선택
                        - path("message"):  배열 내부의 JSON 데이터 중 key가 message인 value 선택
                        - path("content"):  message의 value 내부의 JSON 데이터 중 key가 content인 value 선택
                        - asText():         key가 content인 value를 Text로 전환
   - readTree:          - JSON 문자열을 JsonNode 객체로 파싱

예시 데이터
<200 OK OK,
{
  "id": "아이디",
  "object": "chat.completion",
  "created": 1715591782,
  "model": "gpt-3.5-turbo-0125",
  "choices": [
    {
      "index": 0,
      "message": {
        "role": "assistant",
        "content": "Hello! How can I assist you today?"
      },
      "logprobs": null,
      "finish_reason": "stop"
    }
  ],
  "usage": {
    "prompt_tokens": 8,
    "completion_tokens": 9,
    "total_tokens": 17
  },
  "system_fingerprint": null
}
,[Date:"Mon, 13 May 2024 09:16:23 GMT", 이하 생략]>
